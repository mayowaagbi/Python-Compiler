Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    GREATER
    KEYWORD
    LBRACE
    NEWLINE
    RBRACE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> assignment_statement
Rule 6     assignment_statement -> ID EQUALS expression SEMICOLON
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression TIMES expression
Rule 10    expression -> expression DIVIDE expression
Rule 11    expression -> expression OPERATOR expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> NUMBER
Rule 14    expression -> STRING
Rule 15    expression -> TRUE
Rule 16    expression -> FALSE

Terminals, with rules where they appear

COLON                : 
COMMENT              : 
DIVIDE               : 10
EQUALS               : 6
FALSE                : 16
GREATER              : 
ID                   : 6
KEYWORD              : 
LBRACE               : 
LPAREN               : 12
MINUS                : 8
NEWLINE              : 
NUMBER               : 13
OPERATOR             : 11
PLUS                 : 7
RBRACE               : 
RPAREN               : 12
SEMICOLON            : 4 6
STRING               : 14
TIMES                : 9
TRUE                 : 15
error                : 

Nonterminals, with rules where they appear

assignment_statement : 5
expression           : 4 6 7 7 8 8 9 9 10 10 11 11 12
program              : 0
statement            : 2 3
statement_list       : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . assignment_statement
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    ID              shift and go to state 11

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment_statement           shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . assignment_statement
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON

    $end            reduce using rule 1 (program -> statement_list .)
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    ID              shift and go to state 11

    statement                      shift and go to state 12
    expression                     shift and go to state 4
    assignment_statement           shift and go to state 5

state 3

    (3) statement_list -> statement .

    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . SEMICOLON
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

    SEMICOLON       shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18


state 5

    (5) statement -> assignment_statement .

    LPAREN          reduce using rule 5 (statement -> assignment_statement .)
    NUMBER          reduce using rule 5 (statement -> assignment_statement .)
    STRING          reduce using rule 5 (statement -> assignment_statement .)
    TRUE            reduce using rule 5 (statement -> assignment_statement .)
    FALSE           reduce using rule 5 (statement -> assignment_statement .)
    ID              reduce using rule 5 (statement -> assignment_statement .)
    $end            reduce using rule 5 (statement -> assignment_statement .)


state 6

    (12) expression -> LPAREN . expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 19

state 7

    (13) expression -> NUMBER .

    SEMICOLON       reduce using rule 13 (expression -> NUMBER .)
    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    OPERATOR        reduce using rule 13 (expression -> NUMBER .)
    RPAREN          reduce using rule 13 (expression -> NUMBER .)


state 8

    (14) expression -> STRING .

    SEMICOLON       reduce using rule 14 (expression -> STRING .)
    PLUS            reduce using rule 14 (expression -> STRING .)
    MINUS           reduce using rule 14 (expression -> STRING .)
    TIMES           reduce using rule 14 (expression -> STRING .)
    DIVIDE          reduce using rule 14 (expression -> STRING .)
    OPERATOR        reduce using rule 14 (expression -> STRING .)
    RPAREN          reduce using rule 14 (expression -> STRING .)


state 9

    (15) expression -> TRUE .

    SEMICOLON       reduce using rule 15 (expression -> TRUE .)
    PLUS            reduce using rule 15 (expression -> TRUE .)
    MINUS           reduce using rule 15 (expression -> TRUE .)
    TIMES           reduce using rule 15 (expression -> TRUE .)
    DIVIDE          reduce using rule 15 (expression -> TRUE .)
    OPERATOR        reduce using rule 15 (expression -> TRUE .)
    RPAREN          reduce using rule 15 (expression -> TRUE .)


state 10

    (16) expression -> FALSE .

    SEMICOLON       reduce using rule 16 (expression -> FALSE .)
    PLUS            reduce using rule 16 (expression -> FALSE .)
    MINUS           reduce using rule 16 (expression -> FALSE .)
    TIMES           reduce using rule 16 (expression -> FALSE .)
    DIVIDE          reduce using rule 16 (expression -> FALSE .)
    OPERATOR        reduce using rule 16 (expression -> FALSE .)
    RPAREN          reduce using rule 16 (expression -> FALSE .)


state 11

    (6) assignment_statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 20


state 12

    (2) statement_list -> statement_list statement .

    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 13

    (4) statement -> expression SEMICOLON .

    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 4 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 4 (statement -> expression SEMICOLON .)
    ID              reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)


state 14

    (7) expression -> expression PLUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 21

state 15

    (8) expression -> expression MINUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 22

state 16

    (9) expression -> expression TIMES . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 23

state 17

    (10) expression -> expression DIVIDE . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 24

state 18

    (11) expression -> expression OPERATOR . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 25

state 19

    (12) expression -> LPAREN expression . RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

    RPAREN          shift and go to state 26
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18


state 20

    (6) assignment_statement -> ID EQUALS . expression SEMICOLON
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . TRUE
    (16) expression -> . FALSE

    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    STRING          shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10

    expression                     shift and go to state 27

state 21

    (7) expression -> expression PLUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 7 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18

  ! PLUS            [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! OPERATOR        [ reduce using rule 7 (expression -> expression PLUS expression .) ]


state 22

    (8) expression -> expression MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 8 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18

  ! PLUS            [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! OPERATOR        [ reduce using rule 8 (expression -> expression MINUS expression .) ]


state 23

    (9) expression -> expression TIMES expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 9 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 9 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18

  ! PLUS            [ reduce using rule 9 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression TIMES expression .) ]
  ! OPERATOR        [ reduce using rule 9 (expression -> expression TIMES expression .) ]


state 24

    (10) expression -> expression DIVIDE expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 10 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 10 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18

  ! PLUS            [ reduce using rule 10 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression DIVIDE expression .) ]
  ! OPERATOR        [ reduce using rule 10 (expression -> expression DIVIDE expression .) ]


state 25

    (11) expression -> expression OPERATOR expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 11 (expression -> expression OPERATOR expression .)
    RPAREN          reduce using rule 11 (expression -> expression OPERATOR expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18

  ! PLUS            [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]
  ! OPERATOR        [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]


state 26

    (12) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    OPERATOR        reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 27

    (6) assignment_statement -> ID EQUALS expression . SEMICOLON
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . OPERATOR expression

    SEMICOLON       shift and go to state 28
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    OPERATOR        shift and go to state 18


state 28

    (6) assignment_statement -> ID EQUALS expression SEMICOLON .

    LPAREN          reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 21 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 21 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 22 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 22 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 25 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 25 resolved as shift
