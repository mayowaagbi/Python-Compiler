Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CLASS
    COLON
    COMMA
    COMMENT
    DEF
    FALSE
    FLOAT
    FOR
    INT
    LBRACKET
    NEW
    NEWLINE
    NOT
    OPERATOR
    OR
    RBRACKET
    RETURN
    STRING
    TRUE
    TYPE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment_statement
Rule 5     statement -> if_statement
Rule 6     assignment_statement -> ID EQUALS expression SEMICOLON
Rule 7     if_statement -> IF LPAREN expression RPAREN block_statement
Rule 8     if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement
Rule 9     block_statement -> LBRACE statement_list RBRACE
Rule 10    block_statement -> LBRACE RBRACE
Rule 11    expression -> term
Rule 12    expression -> expression PLUS term
Rule 13    expression -> expression MINUS term
Rule 14    expression -> comparison
Rule 15    comparison -> term GREATER term
Rule 16    comparison -> term LESS term
Rule 17    comparison -> term EQUAL_EQUAL term
Rule 18    comparison -> term NOT_EQUAL term
Rule 19    comparison -> term GREATER_EQUAL term
Rule 20    comparison -> term LESS_EQUAL term
Rule 21    term -> factor
Rule 22    term -> term TIMES factor
Rule 23    term -> term DIVIDE factor
Rule 24    factor -> NUMBER
Rule 25    factor -> ID
Rule 26    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
CLASS                : 
COLON                : 
COMMA                : 
COMMENT              : 
DEF                  : 
DIVIDE               : 23
ELSE                 : 8
EQUALS               : 6
EQUAL_EQUAL          : 17
FALSE                : 
FLOAT                : 
FOR                  : 
GREATER              : 15
GREATER_EQUAL        : 19
ID                   : 6 25
IF                   : 7 8
INT                  : 
LBRACE               : 9 10
LBRACKET             : 
LESS                 : 16
LESS_EQUAL           : 20
LPAREN               : 7 8 26
MINUS                : 13
NEW                  : 
NEWLINE              : 
NOT                  : 
NOT_EQUAL            : 18
NUMBER               : 24
OPERATOR             : 
OR                   : 
PLUS                 : 12
RBRACE               : 9 10
RBRACKET             : 
RETURN               : 
RPAREN               : 7 8 26
SEMICOLON            : 6
STRING               : 
TIMES                : 22
TRUE                 : 
TYPE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment_statement : 4
block_statement      : 7 8 8
comparison           : 14
expression           : 6 7 8 12 13 26
factor               : 21 22 23
if_statement         : 5
program              : 0
statement            : 2 3
statement_list       : 1 3 9
term                 : 11 12 13 15 15 16 16 17 17 18 18 19 19 20 20 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON
    (7) if_statement -> . IF LPAREN expression RPAREN block_statement
    (8) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement

    ID              shift and go to state 6
    IF              shift and go to state 7

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON
    (7) if_statement -> . IF LPAREN expression RPAREN block_statement
    (8) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 6
    IF              shift and go to state 7

    statement                      shift and go to state 8
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment_statement .

    ID              reduce using rule 4 (statement -> assignment_statement .)
    IF              reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)
    RBRACE          reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) statement -> if_statement .

    ID              reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBRACE          reduce using rule 5 (statement -> if_statement .)


state 6

    (6) assignment_statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 9


state 7

    (7) if_statement -> IF . LPAREN expression RPAREN block_statement
    (8) if_statement -> IF . LPAREN expression RPAREN block_statement ELSE block_statement

    LPAREN          shift and go to state 10


state 8

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 9

    (6) assignment_statement -> ID EQUALS . expression SEMICOLON
    (11) expression -> . term
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . comparison
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (15) comparison -> . term GREATER term
    (16) comparison -> . term LESS term
    (17) comparison -> . term EQUAL_EQUAL term
    (18) comparison -> . term NOT_EQUAL term
    (19) comparison -> . term GREATER_EQUAL term
    (20) comparison -> . term LESS_EQUAL term
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    expression                     shift and go to state 12
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 10

    (7) if_statement -> IF LPAREN . expression RPAREN block_statement
    (8) if_statement -> IF LPAREN . expression RPAREN block_statement ELSE block_statement
    (11) expression -> . term
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . comparison
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (15) comparison -> . term GREATER term
    (16) comparison -> . term LESS term
    (17) comparison -> . term EQUAL_EQUAL term
    (18) comparison -> . term NOT_EQUAL term
    (19) comparison -> . term GREATER_EQUAL term
    (20) comparison -> . term LESS_EQUAL term
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    expression                     shift and go to state 18
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 11

    (25) factor -> ID .

    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    GREATER         reduce using rule 25 (factor -> ID .)
    LESS            reduce using rule 25 (factor -> ID .)
    EQUAL_EQUAL     reduce using rule 25 (factor -> ID .)
    NOT_EQUAL       reduce using rule 25 (factor -> ID .)
    GREATER_EQUAL   reduce using rule 25 (factor -> ID .)
    LESS_EQUAL      reduce using rule 25 (factor -> ID .)
    SEMICOLON       reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    RPAREN          reduce using rule 25 (factor -> ID .)


state 12

    (6) assignment_statement -> ID EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 19
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 13

    (11) expression -> term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor
    (15) comparison -> term . GREATER term
    (16) comparison -> term . LESS term
    (17) comparison -> term . EQUAL_EQUAL term
    (18) comparison -> term . NOT_EQUAL term
    (19) comparison -> term . GREATER_EQUAL term
    (20) comparison -> term . LESS_EQUAL term

    SEMICOLON       reduce using rule 11 (expression -> term .)
    PLUS            reduce using rule 11 (expression -> term .)
    MINUS           reduce using rule 11 (expression -> term .)
    RPAREN          reduce using rule 11 (expression -> term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GREATER         shift and go to state 24
    LESS            shift and go to state 25
    EQUAL_EQUAL     shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29


state 14

    (14) expression -> comparison .

    SEMICOLON       reduce using rule 14 (expression -> comparison .)
    PLUS            reduce using rule 14 (expression -> comparison .)
    MINUS           reduce using rule 14 (expression -> comparison .)
    RPAREN          reduce using rule 14 (expression -> comparison .)


state 15

    (21) term -> factor .

    TIMES           reduce using rule 21 (term -> factor .)
    DIVIDE          reduce using rule 21 (term -> factor .)
    GREATER         reduce using rule 21 (term -> factor .)
    LESS            reduce using rule 21 (term -> factor .)
    EQUAL_EQUAL     reduce using rule 21 (term -> factor .)
    NOT_EQUAL       reduce using rule 21 (term -> factor .)
    GREATER_EQUAL   reduce using rule 21 (term -> factor .)
    LESS_EQUAL      reduce using rule 21 (term -> factor .)
    SEMICOLON       reduce using rule 21 (term -> factor .)
    PLUS            reduce using rule 21 (term -> factor .)
    MINUS           reduce using rule 21 (term -> factor .)
    RPAREN          reduce using rule 21 (term -> factor .)


state 16

    (24) factor -> NUMBER .

    TIMES           reduce using rule 24 (factor -> NUMBER .)
    DIVIDE          reduce using rule 24 (factor -> NUMBER .)
    GREATER         reduce using rule 24 (factor -> NUMBER .)
    LESS            reduce using rule 24 (factor -> NUMBER .)
    EQUAL_EQUAL     reduce using rule 24 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 24 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 24 (factor -> NUMBER .)
    LESS_EQUAL      reduce using rule 24 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 24 (factor -> NUMBER .)
    PLUS            reduce using rule 24 (factor -> NUMBER .)
    MINUS           reduce using rule 24 (factor -> NUMBER .)
    RPAREN          reduce using rule 24 (factor -> NUMBER .)


state 17

    (26) factor -> LPAREN . expression RPAREN
    (11) expression -> . term
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . comparison
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (15) comparison -> . term GREATER term
    (16) comparison -> . term LESS term
    (17) comparison -> . term EQUAL_EQUAL term
    (18) comparison -> . term NOT_EQUAL term
    (19) comparison -> . term GREATER_EQUAL term
    (20) comparison -> . term LESS_EQUAL term
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    expression                     shift and go to state 30
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 18

    (7) if_statement -> IF LPAREN expression . RPAREN block_statement
    (8) if_statement -> IF LPAREN expression . RPAREN block_statement ELSE block_statement
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    RPAREN          shift and go to state 31
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 19

    (6) assignment_statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 6 (assignment_statement -> ID EQUALS expression SEMICOLON .)


state 20

    (12) expression -> expression PLUS . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 32
    factor                         shift and go to state 15

state 21

    (13) expression -> expression MINUS . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 33
    factor                         shift and go to state 15

state 22

    (22) term -> term TIMES . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    factor                         shift and go to state 34

state 23

    (23) term -> term DIVIDE . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    factor                         shift and go to state 35

state 24

    (15) comparison -> term GREATER . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 36
    factor                         shift and go to state 15

state 25

    (16) comparison -> term LESS . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 37
    factor                         shift and go to state 15

state 26

    (17) comparison -> term EQUAL_EQUAL . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 38
    factor                         shift and go to state 15

state 27

    (18) comparison -> term NOT_EQUAL . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 39
    factor                         shift and go to state 15

state 28

    (19) comparison -> term GREATER_EQUAL . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 40
    factor                         shift and go to state 15

state 29

    (20) comparison -> term LESS_EQUAL . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 11
    LPAREN          shift and go to state 17

    term                           shift and go to state 41
    factor                         shift and go to state 15

state 30

    (26) factor -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 31

    (7) if_statement -> IF LPAREN expression RPAREN . block_statement
    (8) if_statement -> IF LPAREN expression RPAREN . block_statement ELSE block_statement
    (9) block_statement -> . LBRACE statement_list RBRACE
    (10) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 44

    block_statement                shift and go to state 43

state 32

    (12) expression -> expression PLUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 12 (expression -> expression PLUS term .)
    PLUS            reduce using rule 12 (expression -> expression PLUS term .)
    MINUS           reduce using rule 12 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 33

    (13) expression -> expression MINUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 13 (expression -> expression MINUS term .)
    PLUS            reduce using rule 13 (expression -> expression MINUS term .)
    MINUS           reduce using rule 13 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 34

    (22) term -> term TIMES factor .

    TIMES           reduce using rule 22 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 22 (term -> term TIMES factor .)
    GREATER         reduce using rule 22 (term -> term TIMES factor .)
    LESS            reduce using rule 22 (term -> term TIMES factor .)
    EQUAL_EQUAL     reduce using rule 22 (term -> term TIMES factor .)
    NOT_EQUAL       reduce using rule 22 (term -> term TIMES factor .)
    GREATER_EQUAL   reduce using rule 22 (term -> term TIMES factor .)
    LESS_EQUAL      reduce using rule 22 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 22 (term -> term TIMES factor .)
    PLUS            reduce using rule 22 (term -> term TIMES factor .)
    MINUS           reduce using rule 22 (term -> term TIMES factor .)
    RPAREN          reduce using rule 22 (term -> term TIMES factor .)


state 35

    (23) term -> term DIVIDE factor .

    TIMES           reduce using rule 23 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 23 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 23 (term -> term DIVIDE factor .)
    LESS            reduce using rule 23 (term -> term DIVIDE factor .)
    EQUAL_EQUAL     reduce using rule 23 (term -> term DIVIDE factor .)
    NOT_EQUAL       reduce using rule 23 (term -> term DIVIDE factor .)
    GREATER_EQUAL   reduce using rule 23 (term -> term DIVIDE factor .)
    LESS_EQUAL      reduce using rule 23 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 23 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 23 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 23 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 23 (term -> term DIVIDE factor .)


state 36

    (15) comparison -> term GREATER term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 15 (comparison -> term GREATER term .)
    PLUS            reduce using rule 15 (comparison -> term GREATER term .)
    MINUS           reduce using rule 15 (comparison -> term GREATER term .)
    RPAREN          reduce using rule 15 (comparison -> term GREATER term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 37

    (16) comparison -> term LESS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 16 (comparison -> term LESS term .)
    PLUS            reduce using rule 16 (comparison -> term LESS term .)
    MINUS           reduce using rule 16 (comparison -> term LESS term .)
    RPAREN          reduce using rule 16 (comparison -> term LESS term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 38

    (17) comparison -> term EQUAL_EQUAL term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 17 (comparison -> term EQUAL_EQUAL term .)
    PLUS            reduce using rule 17 (comparison -> term EQUAL_EQUAL term .)
    MINUS           reduce using rule 17 (comparison -> term EQUAL_EQUAL term .)
    RPAREN          reduce using rule 17 (comparison -> term EQUAL_EQUAL term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 39

    (18) comparison -> term NOT_EQUAL term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (comparison -> term NOT_EQUAL term .)
    PLUS            reduce using rule 18 (comparison -> term NOT_EQUAL term .)
    MINUS           reduce using rule 18 (comparison -> term NOT_EQUAL term .)
    RPAREN          reduce using rule 18 (comparison -> term NOT_EQUAL term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 40

    (19) comparison -> term GREATER_EQUAL term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (comparison -> term GREATER_EQUAL term .)
    PLUS            reduce using rule 19 (comparison -> term GREATER_EQUAL term .)
    MINUS           reduce using rule 19 (comparison -> term GREATER_EQUAL term .)
    RPAREN          reduce using rule 19 (comparison -> term GREATER_EQUAL term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 41

    (20) comparison -> term LESS_EQUAL term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (comparison -> term LESS_EQUAL term .)
    PLUS            reduce using rule 20 (comparison -> term LESS_EQUAL term .)
    MINUS           reduce using rule 20 (comparison -> term LESS_EQUAL term .)
    RPAREN          reduce using rule 20 (comparison -> term LESS_EQUAL term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 42

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    EQUAL_EQUAL     reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 43

    (7) if_statement -> IF LPAREN expression RPAREN block_statement .
    (8) if_statement -> IF LPAREN expression RPAREN block_statement . ELSE block_statement

    ID              reduce using rule 7 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    IF              reduce using rule 7 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 7 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 7 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    ELSE            shift and go to state 45


state 44

    (9) block_statement -> LBRACE . statement_list RBRACE
    (10) block_statement -> LBRACE . RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON
    (7) if_statement -> . IF LPAREN expression RPAREN block_statement
    (8) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement

    RBRACE          shift and go to state 47
    ID              shift and go to state 6
    IF              shift and go to state 7

    statement_list                 shift and go to state 46
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5

state 45

    (8) if_statement -> IF LPAREN expression RPAREN block_statement ELSE . block_statement
    (9) block_statement -> . LBRACE statement_list RBRACE
    (10) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 44

    block_statement                shift and go to state 48

state 46

    (9) block_statement -> LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) assignment_statement -> . ID EQUALS expression SEMICOLON
    (7) if_statement -> . IF LPAREN expression RPAREN block_statement
    (8) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement

    RBRACE          shift and go to state 49
    ID              shift and go to state 6
    IF              shift and go to state 7

    statement                      shift and go to state 8
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5

state 47

    (10) block_statement -> LBRACE RBRACE .

    ELSE            reduce using rule 10 (block_statement -> LBRACE RBRACE .)
    ID              reduce using rule 10 (block_statement -> LBRACE RBRACE .)
    IF              reduce using rule 10 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 10 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 10 (block_statement -> LBRACE RBRACE .)


state 48

    (8) if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .

    ID              reduce using rule 8 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    IF              reduce using rule 8 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    $end            reduce using rule 8 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    RBRACE          reduce using rule 8 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)


state 49

    (9) block_statement -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 9 (block_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 9 (block_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 9 (block_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 9 (block_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 9 (block_statement -> LBRACE statement_list RBRACE .)

