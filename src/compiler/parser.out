Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    EQUAL_EQUAL
    FALSE
    FLOAT
    GREATER
    GREATER_EQUAL
    INT
    KEYWORD
    LESS
    LESS_EQUAL
    NEW
    NOT
    NOT_EQUAL
    OPERATOR
    OR
    TRUE

Grammar

Rule 0     S' -> empty
Rule 1     empty -> <empty>
Rule 2     program -> statement_list
Rule 3     statement_list -> statement_list statement
Rule 4     statement_list -> statement
Rule 5     statement -> assignment_statement
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> function_definition
Rule 10    statement -> block_statement
Rule 11    statement -> return_statement
Rule 12    statement -> COMMENT
Rule 13    statement -> NEWLINE
Rule 14    assignment_statement -> ID EQUALS expression SEMICOLON
Rule 15    function_definition -> DEF ID LPAREN parameters RPAREN COLON block_statement
Rule 16    parameters -> parameter_list
Rule 17    parameters -> empty
Rule 18    parameter_list -> parameter_list COMMA ID
Rule 19    parameter_list -> ID
Rule 20    function_call -> ID LPAREN argument_list RPAREN
Rule 21    argument_list -> expression_list
Rule 22    argument_list -> empty
Rule 23    return_statement -> RETURN expression SEMICOLON
Rule 24    if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement
Rule 25    if_statement -> IF LPAREN expression RPAREN block_statement
Rule 26    while_statement -> WHILE LPAREN expression RPAREN block_statement
Rule 27    for_statement -> FOR LPAREN assignment_statement SEMICOLON expression SEMICOLON assignment_statement RPAREN block_statement
Rule 28    block_statement -> LBRACE statement_list RBRACE
Rule 29    block_statement -> empty
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> LPAREN expression RPAREN
Rule 35    expression -> NUMBER
Rule 36    expression -> STRING
Rule 37    expression -> ID
Rule 38    expression_list -> expression
Rule 39    expression_list -> expression COMMA expression_list
Rule 40    variable_declaration -> TYPE ID EQUALS expression SEMICOLON
Rule 41    variable_declaration -> TYPE ID SEMICOLON
Rule 42    array_definition -> ID EQUALS LBRACKET element_list RBRACKET SEMICOLON
Rule 43    element_list -> element_list COMMA expression
Rule 44    element_list -> expression
Rule 45    array_access -> ID LBRACKET expression RBRACKET
Rule 46    class_definition -> CLASS ID LBRACE class_body RBRACE
Rule 47    class_body -> class_member class_body
Rule 48    class_body -> empty
Rule 49    class_member -> function_definition
Rule 50    class_member -> variable_declaration

Terminals, with rules where they appear

AND                  : 
CLASS                : 46
COLON                : 15
COMMA                : 18 39 43
COMMENT              : 12
DEF                  : 15
DIVIDE               : 33
ELSE                 : 24
EQUALS               : 14 40 42
EQUAL_EQUAL          : 
FALSE                : 
FLOAT                : 
FOR                  : 27
GREATER              : 
GREATER_EQUAL        : 
ID                   : 14 15 18 19 20 37 40 41 42 45 46
IF                   : 24 25
INT                  : 
KEYWORD              : 
LBRACE               : 28 46
LBRACKET             : 42 45
LESS                 : 
LESS_EQUAL           : 
LPAREN               : 15 20 24 25 26 27 34
MINUS                : 31
NEW                  : 
NEWLINE              : 13
NOT                  : 
NOT_EQUAL            : 
NUMBER               : 35
OPERATOR             : 
OR                   : 
PLUS                 : 30
RBRACE               : 28 46
RBRACKET             : 42 45
RETURN               : 23
RPAREN               : 15 20 24 25 26 27 34
SEMICOLON            : 14 23 27 27 40 41 42
STRING               : 36
TIMES                : 32
TRUE                 : 
TYPE                 : 40 41
WHILE                : 26
error                : 

Nonterminals, with rules where they appear

argument_list        : 20
array_access         : 
array_definition     : 
assignment_statement : 5 27 27
block_statement      : 10 15 24 24 25 26 27
class_body           : 46 47
class_definition     : 
class_member         : 47
element_list         : 42 43
empty                : 17 22 29 48 0
expression           : 14 23 24 25 26 27 30 30 31 31 32 32 33 33 34 38 39 40 43 44 45
expression_list      : 21 39
for_statement        : 8
function_call        : 
function_definition  : 9 49
if_statement         : 6
parameter_list       : 16 18
parameters           : 15
program              : 
return_statement     : 11
statement            : 3 4
statement_list       : 2 3 28
variable_declaration : 50
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . empty
    (1) empty -> .

    $end            reduce using rule 1 (empty -> .)

    empty                          shift and go to state 1

state 1

    (0) S' -> empty .


