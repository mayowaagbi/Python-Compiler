Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CLASS
    COLON
    COMMA
    COMMENT
    DEF
    FALSE
    FLOAT
    INT
    LBRACKET
    NEW
    NEWLINE
    NOT
    OPERATOR
    OR
    RBRACKET
    STRING
    TRUE
    TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment_statement
Rule 5     statement -> if_statement
Rule 6     statement -> while_statement
Rule 7     statement -> for_statement
Rule 8     statement -> return_statement
Rule 9     statement -> expression SEMICOLON
Rule 10    assignment_statement -> ID EQUALS expression SEMICOLON
Rule 11    if_statement -> IF LPAREN expression RPAREN block_statement
Rule 12    if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement
Rule 13    while_statement -> WHILE LPAREN expression RPAREN block_statement
Rule 14    for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
Rule 15    return_statement -> RETURN expression SEMICOLON
Rule 16    return_statement -> RETURN SEMICOLON
Rule 17    block_statement -> LBRACE statement_list RBRACE
Rule 18    block_statement -> LBRACE RBRACE
Rule 19    expression -> term
Rule 20    expression -> expression PLUS term
Rule 21    expression -> expression MINUS term
Rule 22    expression -> comparison
Rule 23    comparison -> term GREATER term
Rule 24    comparison -> term LESS term
Rule 25    comparison -> term EQUAL_EQUAL term
Rule 26    comparison -> term NOT_EQUAL term
Rule 27    comparison -> term GREATER_EQUAL term
Rule 28    comparison -> term LESS_EQUAL term
Rule 29    term -> factor
Rule 30    term -> term TIMES factor
Rule 31    term -> term DIVIDE factor
Rule 32    factor -> NUMBER
Rule 33    factor -> ID
Rule 34    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
CLASS                : 
COLON                : 
COMMA                : 
COMMENT              : 
DEF                  : 
DIVIDE               : 31
ELSE                 : 12
EQUALS               : 10
EQUAL_EQUAL          : 25
FALSE                : 
FLOAT                : 
FOR                  : 14
GREATER              : 23
GREATER_EQUAL        : 27
ID                   : 10 33
IF                   : 11 12
INT                  : 
LBRACE               : 17 18
LBRACKET             : 
LESS                 : 24
LESS_EQUAL           : 28
LPAREN               : 11 12 13 14 34
MINUS                : 21
NEW                  : 
NEWLINE              : 
NOT                  : 
NOT_EQUAL            : 26
NUMBER               : 32
OPERATOR             : 
OR                   : 
PLUS                 : 20
RBRACE               : 17 18
RBRACKET             : 
RETURN               : 15 16
RPAREN               : 11 12 13 14 34
SEMICOLON            : 9 10 14 15 16
STRING               : 
TIMES                : 30
TRUE                 : 
TYPE                 : 
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

assignment_statement : 4 14 14
block_statement      : 11 12 12 13 14
comparison           : 22
expression           : 9 10 11 12 13 14 15 20 21 34
factor               : 29 30 31
for_statement        : 7
if_statement         : 5
program              : 0
return_statement     : 8
statement            : 2 3
statement_list       : 1 3 17
term                 : 19 20 21 23 23 24 24 25 25 26 26 27 27 28 28 30 31
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . return_statement
    (9) statement -> . expression SEMICOLON
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN block_statement
    (12) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement
    (13) while_statement -> . WHILE LPAREN expression RPAREN block_statement
    (14) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
    (15) return_statement -> . RETURN expression SEMICOLON
    (16) return_statement -> . RETURN SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    NUMBER          shift and go to state 19
    LPAREN          shift and go to state 12

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7
    return_statement               shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . return_statement
    (9) statement -> . expression SEMICOLON
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN block_statement
    (12) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement
    (13) while_statement -> . WHILE LPAREN expression RPAREN block_statement
    (14) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
    (15) return_statement -> . RETURN expression SEMICOLON
    (16) return_statement -> . RETURN SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    NUMBER          shift and go to state 19
    LPAREN          shift and go to state 12

    statement                      shift and go to state 20
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7
    return_statement               shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment_statement .

    ID              reduce using rule 4 (statement -> assignment_statement .)
    IF              reduce using rule 4 (statement -> assignment_statement .)
    WHILE           reduce using rule 4 (statement -> assignment_statement .)
    FOR             reduce using rule 4 (statement -> assignment_statement .)
    RETURN          reduce using rule 4 (statement -> assignment_statement .)
    NUMBER          reduce using rule 4 (statement -> assignment_statement .)
    LPAREN          reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)
    RBRACE          reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) statement -> if_statement .

    ID              reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    WHILE           reduce using rule 5 (statement -> if_statement .)
    FOR             reduce using rule 5 (statement -> if_statement .)
    RETURN          reduce using rule 5 (statement -> if_statement .)
    NUMBER          reduce using rule 5 (statement -> if_statement .)
    LPAREN          reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBRACE          reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> while_statement .

    ID              reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    FOR             reduce using rule 6 (statement -> while_statement .)
    RETURN          reduce using rule 6 (statement -> while_statement .)
    NUMBER          reduce using rule 6 (statement -> while_statement .)
    LPAREN          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    RBRACE          reduce using rule 6 (statement -> while_statement .)


state 7

    (7) statement -> for_statement .

    ID              reduce using rule 7 (statement -> for_statement .)
    IF              reduce using rule 7 (statement -> for_statement .)
    WHILE           reduce using rule 7 (statement -> for_statement .)
    FOR             reduce using rule 7 (statement -> for_statement .)
    RETURN          reduce using rule 7 (statement -> for_statement .)
    NUMBER          reduce using rule 7 (statement -> for_statement .)
    LPAREN          reduce using rule 7 (statement -> for_statement .)
    $end            reduce using rule 7 (statement -> for_statement .)
    RBRACE          reduce using rule 7 (statement -> for_statement .)


state 8

    (8) statement -> return_statement .

    ID              reduce using rule 8 (statement -> return_statement .)
    IF              reduce using rule 8 (statement -> return_statement .)
    WHILE           reduce using rule 8 (statement -> return_statement .)
    FOR             reduce using rule 8 (statement -> return_statement .)
    RETURN          reduce using rule 8 (statement -> return_statement .)
    NUMBER          reduce using rule 8 (statement -> return_statement .)
    LPAREN          reduce using rule 8 (statement -> return_statement .)
    $end            reduce using rule 8 (statement -> return_statement .)
    RBRACE          reduce using rule 8 (statement -> return_statement .)


state 9

    (9) statement -> expression . SEMICOLON
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 10

    (10) assignment_statement -> ID . EQUALS expression SEMICOLON
    (33) factor -> ID .

    EQUALS          shift and go to state 24
    TIMES           reduce using rule 33 (factor -> ID .)
    DIVIDE          reduce using rule 33 (factor -> ID .)
    GREATER         reduce using rule 33 (factor -> ID .)
    LESS            reduce using rule 33 (factor -> ID .)
    EQUAL_EQUAL     reduce using rule 33 (factor -> ID .)
    NOT_EQUAL       reduce using rule 33 (factor -> ID .)
    GREATER_EQUAL   reduce using rule 33 (factor -> ID .)
    LESS_EQUAL      reduce using rule 33 (factor -> ID .)
    SEMICOLON       reduce using rule 33 (factor -> ID .)
    PLUS            reduce using rule 33 (factor -> ID .)
    MINUS           reduce using rule 33 (factor -> ID .)


state 11

    (11) if_statement -> IF . LPAREN expression RPAREN block_statement
    (12) if_statement -> IF . LPAREN expression RPAREN block_statement ELSE block_statement

    LPAREN          shift and go to state 25


state 12

    (34) factor -> LPAREN . expression RPAREN
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 26
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 13

    (13) while_statement -> WHILE . LPAREN expression RPAREN block_statement

    LPAREN          shift and go to state 28


state 14

    (14) for_statement -> FOR . LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement

    LPAREN          shift and go to state 29


state 15

    (15) return_statement -> RETURN . expression SEMICOLON
    (16) return_statement -> RETURN . SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 31
    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 30
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 16

    (19) expression -> term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (23) comparison -> term . GREATER term
    (24) comparison -> term . LESS term
    (25) comparison -> term . EQUAL_EQUAL term
    (26) comparison -> term . NOT_EQUAL term
    (27) comparison -> term . GREATER_EQUAL term
    (28) comparison -> term . LESS_EQUAL term

    SEMICOLON       reduce using rule 19 (expression -> term .)
    PLUS            reduce using rule 19 (expression -> term .)
    MINUS           reduce using rule 19 (expression -> term .)
    RPAREN          reduce using rule 19 (expression -> term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    GREATER         shift and go to state 34
    LESS            shift and go to state 35
    EQUAL_EQUAL     shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    GREATER_EQUAL   shift and go to state 38
    LESS_EQUAL      shift and go to state 39


state 17

    (22) expression -> comparison .

    SEMICOLON       reduce using rule 22 (expression -> comparison .)
    PLUS            reduce using rule 22 (expression -> comparison .)
    MINUS           reduce using rule 22 (expression -> comparison .)
    RPAREN          reduce using rule 22 (expression -> comparison .)


state 18

    (29) term -> factor .

    TIMES           reduce using rule 29 (term -> factor .)
    DIVIDE          reduce using rule 29 (term -> factor .)
    GREATER         reduce using rule 29 (term -> factor .)
    LESS            reduce using rule 29 (term -> factor .)
    EQUAL_EQUAL     reduce using rule 29 (term -> factor .)
    NOT_EQUAL       reduce using rule 29 (term -> factor .)
    GREATER_EQUAL   reduce using rule 29 (term -> factor .)
    LESS_EQUAL      reduce using rule 29 (term -> factor .)
    SEMICOLON       reduce using rule 29 (term -> factor .)
    PLUS            reduce using rule 29 (term -> factor .)
    MINUS           reduce using rule 29 (term -> factor .)
    RPAREN          reduce using rule 29 (term -> factor .)


state 19

    (32) factor -> NUMBER .

    TIMES           reduce using rule 32 (factor -> NUMBER .)
    DIVIDE          reduce using rule 32 (factor -> NUMBER .)
    GREATER         reduce using rule 32 (factor -> NUMBER .)
    LESS            reduce using rule 32 (factor -> NUMBER .)
    EQUAL_EQUAL     reduce using rule 32 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 32 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 32 (factor -> NUMBER .)
    LESS_EQUAL      reduce using rule 32 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 32 (factor -> NUMBER .)
    PLUS            reduce using rule 32 (factor -> NUMBER .)
    MINUS           reduce using rule 32 (factor -> NUMBER .)
    RPAREN          reduce using rule 32 (factor -> NUMBER .)


state 20

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 21

    (9) statement -> expression SEMICOLON .

    ID              reduce using rule 9 (statement -> expression SEMICOLON .)
    IF              reduce using rule 9 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 9 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> expression SEMICOLON .)


state 22

    (20) expression -> expression PLUS . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 40
    factor                         shift and go to state 18

state 23

    (21) expression -> expression MINUS . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 41
    factor                         shift and go to state 18

state 24

    (10) assignment_statement -> ID EQUALS . expression SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 42
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 25

    (11) if_statement -> IF LPAREN . expression RPAREN block_statement
    (12) if_statement -> IF LPAREN . expression RPAREN block_statement ELSE block_statement
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 43
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 26

    (34) factor -> LPAREN expression . RPAREN
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 27

    (33) factor -> ID .

    TIMES           reduce using rule 33 (factor -> ID .)
    DIVIDE          reduce using rule 33 (factor -> ID .)
    GREATER         reduce using rule 33 (factor -> ID .)
    LESS            reduce using rule 33 (factor -> ID .)
    EQUAL_EQUAL     reduce using rule 33 (factor -> ID .)
    NOT_EQUAL       reduce using rule 33 (factor -> ID .)
    GREATER_EQUAL   reduce using rule 33 (factor -> ID .)
    LESS_EQUAL      reduce using rule 33 (factor -> ID .)
    RPAREN          reduce using rule 33 (factor -> ID .)
    PLUS            reduce using rule 33 (factor -> ID .)
    MINUS           reduce using rule 33 (factor -> ID .)
    SEMICOLON       reduce using rule 33 (factor -> ID .)


state 28

    (13) while_statement -> WHILE LPAREN . expression RPAREN block_statement
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 45
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 29

    (14) for_statement -> FOR LPAREN . assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON

    ID              shift and go to state 47

    assignment_statement           shift and go to state 46

state 30

    (15) return_statement -> RETURN expression . SEMICOLON
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 31

    (16) return_statement -> RETURN SEMICOLON .

    ID              reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    $end            reduce using rule 16 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 16 (return_statement -> RETURN SEMICOLON .)


state 32

    (30) term -> term TIMES . factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    factor                         shift and go to state 49

state 33

    (31) term -> term DIVIDE . factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    factor                         shift and go to state 50

state 34

    (23) comparison -> term GREATER . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 51
    factor                         shift and go to state 18

state 35

    (24) comparison -> term LESS . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 52
    factor                         shift and go to state 18

state 36

    (25) comparison -> term EQUAL_EQUAL . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 53
    factor                         shift and go to state 18

state 37

    (26) comparison -> term NOT_EQUAL . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 54
    factor                         shift and go to state 18

state 38

    (27) comparison -> term GREATER_EQUAL . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 55
    factor                         shift and go to state 18

state 39

    (28) comparison -> term LESS_EQUAL . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    term                           shift and go to state 56
    factor                         shift and go to state 18

state 40

    (20) expression -> expression PLUS term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression PLUS term .)
    PLUS            reduce using rule 20 (expression -> expression PLUS term .)
    MINUS           reduce using rule 20 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 41

    (21) expression -> expression MINUS term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 21 (expression -> expression MINUS term .)
    PLUS            reduce using rule 21 (expression -> expression MINUS term .)
    MINUS           reduce using rule 21 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 42

    (10) assignment_statement -> ID EQUALS expression . SEMICOLON
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 57
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 43

    (11) if_statement -> IF LPAREN expression . RPAREN block_statement
    (12) if_statement -> IF LPAREN expression . RPAREN block_statement ELSE block_statement
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 44

    (34) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    EQUAL_EQUAL     reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (factor -> LPAREN expression RPAREN .)


state 45

    (13) while_statement -> WHILE LPAREN expression . RPAREN block_statement
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 46

    (14) for_statement -> FOR LPAREN assignment_statement . expression SEMICOLON assignment_statement RPAREN block_statement
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 19
    ID              shift and go to state 27
    LPAREN          shift and go to state 12

    expression                     shift and go to state 60
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 47

    (10) assignment_statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 24


state 48

    (15) return_statement -> RETURN expression SEMICOLON .

    ID              reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 15 (return_statement -> RETURN expression SEMICOLON .)


state 49

    (30) term -> term TIMES factor .

    TIMES           reduce using rule 30 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 30 (term -> term TIMES factor .)
    GREATER         reduce using rule 30 (term -> term TIMES factor .)
    LESS            reduce using rule 30 (term -> term TIMES factor .)
    EQUAL_EQUAL     reduce using rule 30 (term -> term TIMES factor .)
    NOT_EQUAL       reduce using rule 30 (term -> term TIMES factor .)
    GREATER_EQUAL   reduce using rule 30 (term -> term TIMES factor .)
    LESS_EQUAL      reduce using rule 30 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 30 (term -> term TIMES factor .)
    PLUS            reduce using rule 30 (term -> term TIMES factor .)
    MINUS           reduce using rule 30 (term -> term TIMES factor .)
    RPAREN          reduce using rule 30 (term -> term TIMES factor .)


state 50

    (31) term -> term DIVIDE factor .

    TIMES           reduce using rule 31 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 31 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 31 (term -> term DIVIDE factor .)
    LESS            reduce using rule 31 (term -> term DIVIDE factor .)
    EQUAL_EQUAL     reduce using rule 31 (term -> term DIVIDE factor .)
    NOT_EQUAL       reduce using rule 31 (term -> term DIVIDE factor .)
    GREATER_EQUAL   reduce using rule 31 (term -> term DIVIDE factor .)
    LESS_EQUAL      reduce using rule 31 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 31 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 31 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 31 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 31 (term -> term DIVIDE factor .)


state 51

    (23) comparison -> term GREATER term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 23 (comparison -> term GREATER term .)
    PLUS            reduce using rule 23 (comparison -> term GREATER term .)
    MINUS           reduce using rule 23 (comparison -> term GREATER term .)
    RPAREN          reduce using rule 23 (comparison -> term GREATER term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 52

    (24) comparison -> term LESS term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 24 (comparison -> term LESS term .)
    PLUS            reduce using rule 24 (comparison -> term LESS term .)
    MINUS           reduce using rule 24 (comparison -> term LESS term .)
    RPAREN          reduce using rule 24 (comparison -> term LESS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 53

    (25) comparison -> term EQUAL_EQUAL term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 25 (comparison -> term EQUAL_EQUAL term .)
    PLUS            reduce using rule 25 (comparison -> term EQUAL_EQUAL term .)
    MINUS           reduce using rule 25 (comparison -> term EQUAL_EQUAL term .)
    RPAREN          reduce using rule 25 (comparison -> term EQUAL_EQUAL term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 54

    (26) comparison -> term NOT_EQUAL term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 26 (comparison -> term NOT_EQUAL term .)
    PLUS            reduce using rule 26 (comparison -> term NOT_EQUAL term .)
    MINUS           reduce using rule 26 (comparison -> term NOT_EQUAL term .)
    RPAREN          reduce using rule 26 (comparison -> term NOT_EQUAL term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 55

    (27) comparison -> term GREATER_EQUAL term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 27 (comparison -> term GREATER_EQUAL term .)
    PLUS            reduce using rule 27 (comparison -> term GREATER_EQUAL term .)
    MINUS           reduce using rule 27 (comparison -> term GREATER_EQUAL term .)
    RPAREN          reduce using rule 27 (comparison -> term GREATER_EQUAL term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 56

    (28) comparison -> term LESS_EQUAL term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 28 (comparison -> term LESS_EQUAL term .)
    PLUS            reduce using rule 28 (comparison -> term LESS_EQUAL term .)
    MINUS           reduce using rule 28 (comparison -> term LESS_EQUAL term .)
    RPAREN          reduce using rule 28 (comparison -> term LESS_EQUAL term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 57

    (10) assignment_statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 10 (assignment_statement -> ID EQUALS expression SEMICOLON .)


state 58

    (11) if_statement -> IF LPAREN expression RPAREN . block_statement
    (12) if_statement -> IF LPAREN expression RPAREN . block_statement ELSE block_statement
    (17) block_statement -> . LBRACE statement_list RBRACE
    (18) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 62

    block_statement                shift and go to state 61

state 59

    (13) while_statement -> WHILE LPAREN expression RPAREN . block_statement
    (17) block_statement -> . LBRACE statement_list RBRACE
    (18) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 62

    block_statement                shift and go to state 63

state 60

    (14) for_statement -> FOR LPAREN assignment_statement expression . SEMICOLON assignment_statement RPAREN block_statement
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 64
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 61

    (11) if_statement -> IF LPAREN expression RPAREN block_statement .
    (12) if_statement -> IF LPAREN expression RPAREN block_statement . ELSE block_statement

    ID              reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    IF              reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    WHILE           reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    FOR             reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    RETURN          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    NUMBER          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    LPAREN          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN block_statement .)
    ELSE            shift and go to state 65


state 62

    (17) block_statement -> LBRACE . statement_list RBRACE
    (18) block_statement -> LBRACE . RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . return_statement
    (9) statement -> . expression SEMICOLON
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN block_statement
    (12) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement
    (13) while_statement -> . WHILE LPAREN expression RPAREN block_statement
    (14) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
    (15) return_statement -> . RETURN expression SEMICOLON
    (16) return_statement -> . RETURN SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 67
    ID              shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    NUMBER          shift and go to state 19
    LPAREN          shift and go to state 12

    statement_list                 shift and go to state 66
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7
    return_statement               shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 63

    (13) while_statement -> WHILE LPAREN expression RPAREN block_statement .

    ID              reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    IF              reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    WHILE           reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    FOR             reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    RETURN          reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    NUMBER          reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    LPAREN          reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 13 (while_statement -> WHILE LPAREN expression RPAREN block_statement .)


state 64

    (14) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON . assignment_statement RPAREN block_statement
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON

    ID              shift and go to state 47

    assignment_statement           shift and go to state 68

state 65

    (12) if_statement -> IF LPAREN expression RPAREN block_statement ELSE . block_statement
    (17) block_statement -> . LBRACE statement_list RBRACE
    (18) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 62

    block_statement                shift and go to state 69

state 66

    (17) block_statement -> LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . return_statement
    (9) statement -> . expression SEMICOLON
    (10) assignment_statement -> . ID EQUALS expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN block_statement
    (12) if_statement -> . IF LPAREN expression RPAREN block_statement ELSE block_statement
    (13) while_statement -> . WHILE LPAREN expression RPAREN block_statement
    (14) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement
    (15) return_statement -> . RETURN expression SEMICOLON
    (16) return_statement -> . RETURN SEMICOLON
    (19) expression -> . term
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . comparison
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (23) comparison -> . term GREATER term
    (24) comparison -> . term LESS term
    (25) comparison -> . term EQUAL_EQUAL term
    (26) comparison -> . term NOT_EQUAL term
    (27) comparison -> . term GREATER_EQUAL term
    (28) comparison -> . term LESS_EQUAL term
    (32) factor -> . NUMBER
    (33) factor -> . ID
    (34) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 70
    ID              shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    NUMBER          shift and go to state 19
    LPAREN          shift and go to state 12

    statement                      shift and go to state 20
    assignment_statement           shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7
    return_statement               shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 16
    comparison                     shift and go to state 17
    factor                         shift and go to state 18

state 67

    (18) block_statement -> LBRACE RBRACE .

    ELSE            reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    ID              reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    IF              reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    WHILE           reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    FOR             reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    RETURN          reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    NUMBER          reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    LPAREN          reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 18 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 18 (block_statement -> LBRACE RBRACE .)


state 68

    (14) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement . RPAREN block_statement

    RPAREN          shift and go to state 71


state 69

    (12) if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .

    ID              reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    IF              reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    WHILE           reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    FOR             reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    RETURN          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    NUMBER          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    LPAREN          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    $end            reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)
    RBRACE          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement .)


state 70

    (17) block_statement -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 17 (block_statement -> LBRACE statement_list RBRACE .)


state 71

    (14) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN . block_statement
    (17) block_statement -> . LBRACE statement_list RBRACE
    (18) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 62

    block_statement                shift and go to state 72

state 72

    (14) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .

    ID              reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    IF              reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    WHILE           reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    FOR             reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    RETURN          reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    NUMBER          reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    LPAREN          reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    $end            reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)
    RBRACE          reduce using rule 14 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON assignment_statement RPAREN block_statement .)

